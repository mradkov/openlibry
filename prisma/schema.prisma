// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        Int      @id @default(autoincrement())
  lastName  String
  firstName String
  phone     String   @default("Не е въведен")
  eMail     String?
  active    Boolean  @default(true)
  books     Book[]
}

model LoginUser {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String
  password  String
  role      String
  active    Boolean  @default(true)
}

model Audit {
  createdAt    DateTime @default(now())
  id           Int      @id @default(autoincrement())
  eventType    String
  eventContent String
  bookid       Int?
  userid       Int?
}

model Book {
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  id                      Int       @id @default(autoincrement())
  libraryId               String?
  rentalStatus            String    @default("available")
  rentedDate              DateTime  @default(now())
  dueDate                 DateTime?
  renewalCount            Int
  title                   String
  subtitle                String?
  author                  String
  topics                  String?
  imageLink               String?
  isbn                    String?
  editionDescription      String?
  publisherLocation       String?
  pages                   Int?
  summary                 String?
  publisherName           String?
  otherPhysicalAttributes String?
  supplierComment         String?
  publisherDate           String?
  physicalSize            String?
  minAge                  String?
  maxAge                  String?
  additionalMaterial      String?
  price                   String?
  externalLinks           String?
  user                    User?     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId                  Int?
}
